
R version 4.3.3 (2024-02-29) -- "Angel Food Cake"
Copyright (C) 2024 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> library(nlme)
> is64bit <- .Machine$sizeof.pointer == 8
> 
> options(digits = 10)# <- see more, as we have *no* *.Rout.save file here
> ## https://stat.ethz.ch/pipermail/r-help/2014-September/422123.html
> nfm <- nlme(circumference ~ SSlogis(age, Asym, xmid, scal),
+             data = Orange,
+             fixed = Asym + xmid + scal ~ 1)
Warning message:
In (function (model, data = sys.frame(sys.parent()), fixed, random,  :
  Iteration 1, LME step: nlminb() did not converge (code = 1). Do increase 'msMaxIter'!
> (sO <- summary(nfm))
Nonlinear mixed-effects model fit by maximum likelihood
  Model: circumference ~ SSlogis(age, Asym, xmid, scal) 
  Data: Orange 
          AIC         BIC       logLik
  279.9813987 295.5348793 -129.9906994

Random effects:
 Formula: list(Asym ~ 1, xmid ~ 1, scal ~ 1)
 Level: Tree
 Structure: General positive-definite, Log-Cholesky parametrization
         StdDev      Corr         
Asym     27.05237861 Asym   xmid  
xmid     24.26202392 -0.327       
scal     36.59285541 -0.992  0.443
Residual  7.32146929              

Fixed effects:  list(Asym ~ 1, xmid ~ 1, scal ~ 1) 
           Value   Std.Error DF     t-value p-value
Asym 192.0962376 14.05307711 28 13.66933634       0
xmid 727.5912396 34.58820649 28 21.03581867       0
scal 356.6029398 30.49619324 28 11.69335914       0
 Correlation: 
     Asym   xmid  
xmid  0.277       
scal -0.193  0.665

Standardized Within-Group Residuals:
          Min            Q1           Med            Q3           Max 
-1.8185888603 -0.5213836554  0.1742748121  0.5175520319  1.6452287486 

Number of Observations: 35
Number of Groups: 5 
> vc <- VarCorr(nfm, rdig = 5)# def. 3
> storage.mode(vc) <- "double" # -> (correct) NA warning
Warning message:
In storage.mode(vc) <- "double" : NAs introduced by coercion
> cfO <- sO$tTable
> if(FALSE)
+     dput(signif(cfO[,c("Std.Error", "t-value")], 8))
> if(FALSE)
+     dput(signif(as.numeric(vc[,"StdDev"]), 8))
> 
> cfO.Ts <- list(
+     stdE.T = cbind(
+         b64nx = ## R-devel 2016-01-11, 2017-09-18; [lynne]:
+             c(14.052671, 34.587947, 30.497593,  13.669776, 21.036087, 11.692943)
+       , b32nx = ## R-devel 2016-01-11, 2017-09-18 [florence, Fedora 24 Linux]:
+             c(14.053663, 34.589821, 30.49412,   13.668653, 21.034544, 11.693889)
+       , b32Win1 = ## R-devel 2017-09-17, i386-w64-mingw32/i386,
+             ## Windows Server 2008 R2 x64 (build 7601) Service Pack 1
+             c(14.053047, 34.588589, 30.4963,    13.669349, 21.035542, 11.693282)
+       , b32Win = ## R-devel 2017-09-18, Tomas K (Win.10)
+             c(14.051902, 34.579819, 30.499807,  13.670797, 21.041722, 11.692694)
+     ),
+     stdDev = cbind(
+         b64nx = ## R-devel 2016-01-11; [lynne]:
+             c(27.051312, 24.258159, 36.597078, 7.321525)
+       , b32nx = ## R-devel 2017-09-18; [florence, Fedora 24 Linux]:
+             c(27.053964, 24.275286, 36.58682,  7.3213653)
+       , b32Win = ## R-devel 2017-09-17, i386-w64-mingw32/i386, W.Server 2008 R2..
+             c(27.05234,  24.264936, 36.593554, 7.3214448)
+         ## for now
+     )
+ )
> ## Average number of decimal digits agreement :
> lapply(cfO.Ts, function(cc) round(-log10(apply(cc - rowMeans(cc), 1, sd)), 2))
$stdE.T
[1] 3.13 2.34 2.62 3.05 2.49 3.29

$stdDev
[1] 2.87 2.06 2.28 4.10

> ## $ stdE.T: num [1:6] 3.13 2.34 2.62 3.05 2.49 3.29
> ## $ stdDev: num [1:4] 2.87 2.06 2.28 4.1
> ## Pairwise distances (formatted, easier to read off):
> round(dist(1000 * t(cfO.Ts[["stdE.T"]])), 1)
        b64nx b32nx b32Win1
b32nx     4.6              
b32Win1   1.7   2.9        
b32Win   10.2  13.9    11.5
> ##         b64nx b32nx b32Win1
> ## b32nx     4.6
> ## b32Win1   1.7   2.9
> ## b32Win   10.2  13.9    11.5
> round(dist(1000 * t(cfO.Ts[["stdDev"]])), 1)
       b64nx b32nx
b32nx   20.1      
b32Win   7.7  12.5
> ##        b64nx b32nx
> ## b32nx   20.1
> ## b32Win   7.7  12.5
> 
> cName <- (if(is64bit) "b64nx"
+           else if(.Platform$OS.type == "Windows") {
+               if(grepl("Server 2008 R2", win.version(), fixed=TRUE))
+                   "b32Win1"
+               else
+                   "b32Win"
+           }
+           else "b32nx" ## 32-bit, non-Windows
+ )
> 
> cfO.T <- array(cfO.Ts[["stdE.T"]][, cName], dim = 3:2,
+                dimnames = list(c("Asym", "xmid", "scal"),
+                                c("Std.Error", "t-value")))
> vcSD <- setNames(cfO.Ts[["stdDev"]][, switch(cName, b64nx=, b32nx=, b32Win=cName,
+                                              b32Win1 = "b32Win")],
+ 		 c("Asym", "xmid", "scal", "Residual"))
> stopifnot(
+     identical(cfO[,"Value"], fixef(nfm)),
+     all.equal(cfO[,c("Std.Error", "t-value")], cfO.T, tol = 3e-4)
+    ,
+     cfO[,"DF"] == 28,
+     all.equal(vc[,"Variance"], vc[,"StdDev"]^2, tol= 5e-7)
+    ,
+     all.equal(vc[,"StdDev"], vcSD, tol = 6e-4) # 3.5e-4 (R 3.0.3, 32b)
+    ,
+     all.equal(unname(vc[2:3, 3:4]), # "Corr"
+               rbind(c(-0.3273, NA),
+ 		    c(-0.9920, 0.4430)), tol = 2e-3)# ~ 2e-4 / 8e-4
+ )
> 
> ## Confirm  predict(*, newdata=.)  works
> (n <- nrow(Orange)) # 35
[1] 35
> set.seed(17)
> newOr <- within(Orange[sample(n, 64, replace=TRUE), ],
+ 		age <- round(jitter(age, amount = 50)))
> fit.v <- predict(nfm, newdata = newOr)
> resiv <- newOr$circumference - fit.v
> res.T <- c(48, 115, 74, 15, 44, -94, 47, -51, 20, -52, -16, 12, -135,
+            -85, 136, 100, 24, 181, -88, -102, -26, 52, -148, 8, -83, 73,
+            -27, -34, 91, 42, 34, -8, 0, 83, 84, -90, -123, 94, -157, -11,
+            56, -164, -28, 72, 15, 148, 95, -122, 169, 84, -19, -124, 45,
+            -66, -10, 119, -110, -43, 12, 94, -108, 45, 48, 46)
> if(!all((res10 <- round(10 * as.vector(resiv))) == res.T)) {
+     iD <- which(res10 != res.T)
+     cat("Differing rounded residuals, at indices", paste(iD, collapse=", "),
+         "; with values:\n")
+     print(cbind(resiv, res10, res.T)[iD,])
+ }
Differing rounded residuals, at indices 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64 ; with values:
           resiv res10 res.T
5  -7.8064299669   -78    48
5  -9.8898367696   -99   115
4   5.4507286136    55    74
1  -1.1731708944   -12    15
3   3.5079790725    35    44
2  16.9454172561   169   -94
1   5.0673769130    51    47
5 -11.8179397005  -118   -51
3   4.4136775119    44    20
1 -12.2783053802  -123   -52
4   5.4512056561    55   -16
1  -0.4731263452    -5    12
3  -0.6345798615    -6  -135
3   2.4238519529    24   -85
3  -4.9439987453   -49   136
5  -0.0119791980     0   100
3  -9.6729691002   -97    24
2   2.3582181865    24   181
5   4.3020542119    43   -88
5  -6.3699426272   -64  -102
1  -2.8899625195   -29   -26
2   2.7674852693    28    52
4 -12.8903236502  -129  -148
5   0.9681518523    10     8
3 -10.7580925537  -108   -83
4   4.2183793648    42    73
5   2.4229367701    24   -27
1 -12.1413385702  -121   -34
2   3.8890731529    39    91
1 -12.1413385702  -121    42
4  -6.3014709752   -63    34
5  13.4886402277   135    -8
5  -2.8552130550   -29     0
3   0.6466008285     6    83
3   5.3310756051    53    84
2  12.7758599766   128   -90
2  -2.3365770334   -23  -123
2   6.5022601539    65    94
4   2.6259214104    26  -157
2   4.3428649293    43   -11
5  -5.5077342941   -55    56
2   9.0712992830    91  -164
2  -1.9856561504   -20   -28
3  -7.7149714997   -77    72
2  -2.1868268762   -22    15
3   6.9890494101    70   148
4  -0.7571641039    -8    95
1   0.4769139954     5  -122
3   8.1249699853    81   169
2  11.1524045424   112    84
1   2.2569254302    23   -19
5   1.6251875003    16  -124
3  -5.3858644517   -54    45
2   3.9155883348    39   -66
2  -9.7326754618   -97   -10
3   0.3825830325     4   119
1   6.2705613892    63  -110
5  -8.5991685080   -86   -43
2  -1.9590810591   -20    12
2   9.9546864811   100    94
5 -11.4895421076  -115  -108
5  14.8446239557   148    45
2   3.9678243796    40    48
1   2.3492744351    23    46
> ## -> indices  14 [64-bit]  or  27 [32-bit], respectively
> 
> 
> ## [Bug 16715] New: nlme: unable to use predict and augPredict ..
> ## Date: 17 Feb 2016 -- part 2 -- predict():
> ##
> ## Comment 4 daveauty@gmail.com 2016-03-08 -- modified by MM --
> 
> ## simulate density data then fit Michaelis-Menten equation of density as
> ## function of ring age. TreeIDs grouped by SP (spacing)
> set.seed(1)
> df <- data.frame(SP = rep(LETTERS[1:5], 60),
+ 		 expand.grid(TreeID = factor(1:12),
+                              age = seq(2, 50, 2)),
+                  stringsAsFactors = TRUE)
> df[,"dens"] <- with(df, (runif(1,10,20)*age)/(runif(1,9,10)+age)) + rnorm(25, 0, 1)
> str(df)
'data.frame':	300 obs. of  4 variables:
 $ SP    : Factor w/ 5 levels "A","B","C","D",..: 1 2 3 4 5 1 2 3 4 5 ...
 $ TreeID: Factor w/ 12 levels "1","2","3","4",..: 1 2 3 4 5 6 7 8 9 10 ...
 $ age   : num  2 2 2 2 2 2 2 2 2 2 ...
 $ dens  : num  2.41 1.39 3.82 2.56 1.41 ...
> ## 'data.frame':	300 obs. of  4 variables:
> ##  $ SP    : Factor w/ 5 levels "A","B","C","D",..: 1 2 3 4 5 1 2 3 4 5 ...
> ##  $ TreeID: Factor w/ 12 levels "1","2","3","4",..: 1 2 3 4 5 6 7 8 9 10 ...
> ##  $ age   : num  2 2 2 2 2 2 2 2 2 2 ...
> ##  $ dens  : num  2.41 1.39 3.82 2.56 1.41 ...
> 
> ## mixed-effects model
> fit1 <- nlme(dens ~ a*age/(b+age),
+ 	     fixed = a+b ~ 1, random= a ~ 1|TreeID,
+ 	     start = c(a=15, b=5), data=df)
> summary(fit1)
Nonlinear mixed-effects model fit by maximum likelihood
  Model: dens ~ a * age/(b + age) 
  Data: df 
          AIC         BIC       logLik
  808.4069212 823.2220511 -400.2034606

Random effects:
 Formula: a ~ 1 | TreeID
                      a     Residual
StdDev: 2.772067654e-05 0.9185793399

Fixed effects:  a + b ~ 1 
         Value    Std.Error  DF     t-value p-value
a 12.758125774 0.1914871767 287 66.62652817       0
b  8.921206195 0.4906380601 287 18.18286619       0
 Correlation: 
  a    
b 0.918

Standardized Within-Group Residuals:
          Min            Q1           Med            Q3           Max 
-2.6420672795 -0.2833115767  0.2220191322  0.6630992071  1.6161028804 

Number of Observations: 300
Number of Groups: 12 
> fit1R <- update(fit1, method = "REML")
> ## allow fixed effects parameters to vary by 'SP':
> fit2 <- update(fit1, fixed = list(a ~ SP, b ~ SP),
+                start = c(a = rep(14, 5), b = rep(4, 5)))
> summary(fit2)
Nonlinear mixed-effects model fit by maximum likelihood
  Model: dens ~ a * age/(b + age) 
  Data: df 
         AIC         BIC      logLik
  799.210016 843.6554057 -387.605008

Random effects:
 Formula: a ~ 1 | TreeID
          a.(Intercept)     Residual
StdDev: 2.878776089e-05 0.8808025132

Fixed effects:  list(a ~ SP, b ~ SP) 
                     Value    Std.Error  DF      t-value p-value
a.(Intercept) 12.903085399 0.4091007647 279 31.540115571  0.0000
a.SPB         -0.170084516 0.5947105300 279 -0.285995467  0.7751
a.SPC         -0.643219777 0.5919816294 279 -1.086553610  0.2782
a.SPD          0.095662382 0.5731020389 279  0.166920331  0.8676
a.SPE         -0.008338916 0.5812270592 279 -0.014347088  0.9886
b.(Intercept)  8.646803985 1.0165457406 279  8.506064843  0.0000
b.SPB          0.686459283 1.5205832772 279  0.451444714  0.6520
b.SPC          0.672297855 1.5446580501 279  0.435240573  0.6637
b.SPD         -0.159835822 1.4178921494 279 -0.112727771  0.9103
b.SPE          0.221184075 1.4603631136 279  0.151458273  0.8797
 Correlation: 
              a.(In) a.SPB  a.SPC  a.SPD  a.SPE  b.(In) b.SPB  b.SPC  b.SPD 
a.SPB         -0.688                                                        
a.SPC         -0.691  0.475                                                 
a.SPD         -0.714  0.491  0.493                                          
a.SPE         -0.704  0.484  0.486  0.502                                   
b.(Intercept)  0.916 -0.630 -0.633 -0.654 -0.645                            
b.SPB         -0.612  0.919  0.423  0.437  0.431 -0.669                     
b.SPC         -0.603  0.415  0.918  0.430  0.424 -0.658  0.440              
b.SPD         -0.657  0.452  0.454  0.915  0.462 -0.717  0.479  0.472       
b.SPE         -0.637  0.438  0.441  0.455  0.917 -0.696  0.465  0.458  0.499

Standardized Within-Group Residuals:
          Min            Q1           Med            Q3           Max 
-2.3967650255 -0.4568632067  0.0408141796  0.7446766305  2.1758016953 

Number of Observations: 300
Number of Groups: 12 
> 
> ## make new data for predictions
> newdat <- expand.grid(SP = LETTERS[1:5], age = seq(1, 50, 1))
> n.pred1 <- predict(fit1, newdat, level=0) # works fine
> n.pred2 <- predict(fit2, newdat, level=0)
> ## in nlme 3.1-124, throws the error:
> ## Error in eval(expr, envir, enclos) : object 'SP' not found
> 
> ## New data with  never-yet observed levels of a random effect -- PR#16614 :
> set.seed(47)
> newD <- expand.grid(SP = LETTERS[2:4], age = runif(16, 1,50),
+                     TreeID = sample(c(sample(1:12, 7), 100:102)))
> n1prD0 <- predict(fit1, newD, level=0)
> n2prD0 <- predict(fit2, newD, level=0)
> n1prD1 <- predict(fit1, newD, level=1)   # failed in nlme <= 3.1-126
> n2prD1 <- predict(fit2, newD, level=1)   # ditto
> (n1prD01 <- predict(fit1, newD, level=0:1))#  "
    TreeID predict.fixed predict.TreeID
97       5  10.788697601   10.788697602
98       5  10.788697601   10.788697602
99       5  10.788697601   10.788697602
100      5   8.728189215    8.728189215
101      5   8.728189215    8.728189215
102      5   8.728189215    8.728189215
103      5  10.348507080   10.348507081
104      5  10.348507080   10.348507081
105      5  10.348507080   10.348507081
106      5  10.491889152   10.491889152
107      5  10.491889152   10.491889152
108      5  10.491889152   10.491889152
109      5   9.764878646    9.764878647
110      5   9.764878646    9.764878647
111      5   9.764878646    9.764878647
112      5  10.159568880   10.159568881
113      5  10.159568880   10.159568881
114      5  10.159568880   10.159568881
115      5   8.831372620    8.831372620
116      5   8.831372620    8.831372620
117      5   8.831372620    8.831372620
118      5   9.298569650    9.298569650
119      5   9.298569650    9.298569650
120      5   9.298569650    9.298569650
121      5   9.643529914    9.643529915
122      5   9.643529914    9.643529915
123      5   9.643529914    9.643529915
124      5  10.697735077   10.697735077
125      5  10.697735077   10.697735077
126      5  10.697735077   10.697735077
127      5   5.951768078    5.951768079
128      5   5.951768078    5.951768079
129      5   5.951768078    5.951768079
130      5  10.189950685   10.189950686
131      5  10.189950685   10.189950686
132      5  10.189950685   10.189950686
133      5   6.388445585    6.388445585
134      5   6.388445585    6.388445585
135      5   6.388445585    6.388445585
136      5   9.861056861    9.861056861
137      5   9.861056861    9.861056861
138      5   9.861056861    9.861056861
139      5   9.479675711    9.479675712
140      5   9.479675711    9.479675712
141      5   9.479675711    9.479675712
142      5  10.654979638   10.654979639
143      5  10.654979638   10.654979639
144      5  10.654979638   10.654979639
241     11  10.788697601   10.788697601
242     11  10.788697601   10.788697601
243     11  10.788697601   10.788697601
244     11   8.728189215    8.728189215
245     11   8.728189215    8.728189215
246     11   8.728189215    8.728189215
247     11  10.348507080   10.348507080
248     11  10.348507080   10.348507080
249     11  10.348507080   10.348507080
250     11  10.491889152   10.491889152
251     11  10.491889152   10.491889152
252     11  10.491889152   10.491889152
253     11   9.764878646    9.764878646
254     11   9.764878646    9.764878646
255     11   9.764878646    9.764878646
256     11  10.159568880   10.159568880
257     11  10.159568880   10.159568880
258     11  10.159568880   10.159568880
259     11   8.831372620    8.831372620
260     11   8.831372620    8.831372620
261     11   8.831372620    8.831372620
262     11   9.298569650    9.298569650
263     11   9.298569650    9.298569650
264     11   9.298569650    9.298569650
265     11   9.643529914    9.643529914
266     11   9.643529914    9.643529914
267     11   9.643529914    9.643529914
268     11  10.697735077   10.697735077
269     11  10.697735077   10.697735077
270     11  10.697735077   10.697735077
271     11   5.951768078    5.951768078
272     11   5.951768078    5.951768078
273     11   5.951768078    5.951768078
274     11  10.189950685   10.189950685
275     11  10.189950685   10.189950685
276     11  10.189950685   10.189950685
277     11   6.388445585    6.388445585
278     11   6.388445585    6.388445585
279     11   6.388445585    6.388445585
280     11   9.861056861    9.861056861
281     11   9.861056861    9.861056861
282     11   9.861056861    9.861056861
283     11   9.479675711    9.479675711
284     11   9.479675711    9.479675711
285     11   9.479675711    9.479675711
286     11  10.654979638   10.654979638
287     11  10.654979638   10.654979638
288     11  10.654979638   10.654979638
337    100  10.788697601             NA
338    100  10.788697601             NA
339    100  10.788697601             NA
340    100   8.728189215             NA
341    100   8.728189215             NA
342    100   8.728189215             NA
343    100  10.348507080             NA
344    100  10.348507080             NA
345    100  10.348507080             NA
346    100  10.491889152             NA
347    100  10.491889152             NA
348    100  10.491889152             NA
349    100   9.764878646             NA
350    100   9.764878646             NA
351    100   9.764878646             NA
352    100  10.159568880             NA
353    100  10.159568880             NA
354    100  10.159568880             NA
355    100   8.831372620             NA
356    100   8.831372620             NA
357    100   8.831372620             NA
358    100   9.298569650             NA
359    100   9.298569650             NA
360    100   9.298569650             NA
361    100   9.643529914             NA
362    100   9.643529914             NA
363    100   9.643529914             NA
364    100  10.697735077             NA
365    100  10.697735077             NA
366    100  10.697735077             NA
367    100   5.951768078             NA
368    100   5.951768078             NA
369    100   5.951768078             NA
370    100  10.189950685             NA
371    100  10.189950685             NA
372    100  10.189950685             NA
373    100   6.388445585             NA
374    100   6.388445585             NA
375    100   6.388445585             NA
376    100   9.861056861             NA
377    100   9.861056861             NA
378    100   9.861056861             NA
379    100   9.479675711             NA
380    100   9.479675711             NA
381    100   9.479675711             NA
382    100  10.654979638             NA
383    100  10.654979638             NA
384    100  10.654979638             NA
49       4  10.788697601   10.788697602
50       4  10.788697601   10.788697602
51       4  10.788697601   10.788697602
52       4   8.728189215    8.728189215
53       4   8.728189215    8.728189215
54       4   8.728189215    8.728189215
55       4  10.348507080   10.348507080
56       4  10.348507080   10.348507080
57       4  10.348507080   10.348507080
58       4  10.491889152   10.491889152
59       4  10.491889152   10.491889152
60       4  10.491889152   10.491889152
61       4   9.764878646    9.764878647
62       4   9.764878646    9.764878647
63       4   9.764878646    9.764878647
64       4  10.159568880   10.159568880
65       4  10.159568880   10.159568880
66       4  10.159568880   10.159568880
67       4   8.831372620    8.831372620
68       4   8.831372620    8.831372620
69       4   8.831372620    8.831372620
70       4   9.298569650    9.298569650
71       4   9.298569650    9.298569650
72       4   9.298569650    9.298569650
73       4   9.643529914    9.643529914
74       4   9.643529914    9.643529914
75       4   9.643529914    9.643529914
76       4  10.697735077   10.697735077
77       4  10.697735077   10.697735077
78       4  10.697735077   10.697735077
79       4   5.951768078    5.951768078
80       4   5.951768078    5.951768078
81       4   5.951768078    5.951768078
82       4  10.189950685   10.189950685
83       4  10.189950685   10.189950685
84       4  10.189950685   10.189950685
85       4   6.388445585    6.388445585
86       4   6.388445585    6.388445585
87       4   6.388445585    6.388445585
88       4   9.861056861    9.861056861
89       4   9.861056861    9.861056861
90       4   9.861056861    9.861056861
91       4   9.479675711    9.479675711
92       4   9.479675711    9.479675711
93       4   9.479675711    9.479675711
94       4  10.654979638   10.654979638
95       4  10.654979638   10.654979638
96       4  10.654979638   10.654979638
1        2  10.788697601   10.788697602
2        2  10.788697601   10.788697602
3        2  10.788697601   10.788697602
4        2   8.728189215    8.728189216
5        2   8.728189215    8.728189216
6        2   8.728189215    8.728189216
7        2  10.348507080   10.348507081
8        2  10.348507080   10.348507081
9        2  10.348507080   10.348507081
10       2  10.491889152   10.491889153
11       2  10.491889152   10.491889153
12       2  10.491889152   10.491889153
13       2   9.764878646    9.764878647
14       2   9.764878646    9.764878647
15       2   9.764878646    9.764878647
16       2  10.159568880   10.159568881
17       2  10.159568880   10.159568881
18       2  10.159568880   10.159568881
19       2   8.831372620    8.831372621
20       2   8.831372620    8.831372621
21       2   8.831372620    8.831372621
22       2   9.298569650    9.298569651
23       2   9.298569650    9.298569651
24       2   9.298569650    9.298569651
25       2   9.643529914    9.643529915
26       2   9.643529914    9.643529915
27       2   9.643529914    9.643529915
28       2  10.697735077   10.697735078
29       2  10.697735077   10.697735078
30       2  10.697735077   10.697735078
31       2   5.951768078    5.951768079
32       2   5.951768078    5.951768079
33       2   5.951768078    5.951768079
34       2  10.189950685   10.189950686
35       2  10.189950685   10.189950686
36       2  10.189950685   10.189950686
37       2   6.388445585    6.388445586
38       2   6.388445585    6.388445586
39       2   6.388445585    6.388445586
40       2   9.861056861    9.861056861
41       2   9.861056861    9.861056861
42       2   9.861056861    9.861056861
43       2   9.479675711    9.479675712
44       2   9.479675711    9.479675712
45       2   9.479675711    9.479675712
46       2  10.654979638   10.654979639
47       2  10.654979638   10.654979639
48       2  10.654979638   10.654979639
289     12  10.788697601   10.788697602
290     12  10.788697601   10.788697602
291     12  10.788697601   10.788697602
292     12   8.728189215    8.728189215
293     12   8.728189215    8.728189215
294     12   8.728189215    8.728189215
295     12  10.348507080   10.348507080
296     12  10.348507080   10.348507080
297     12  10.348507080   10.348507080
298     12  10.491889152   10.491889152
299     12  10.491889152   10.491889152
300     12  10.491889152   10.491889152
301     12   9.764878646    9.764878647
302     12   9.764878646    9.764878647
303     12   9.764878646    9.764878647
304     12  10.159568880   10.159568881
305     12  10.159568880   10.159568881
306     12  10.159568880   10.159568881
307     12   8.831372620    8.831372620
308     12   8.831372620    8.831372620
309     12   8.831372620    8.831372620
310     12   9.298569650    9.298569650
311     12   9.298569650    9.298569650
312     12   9.298569650    9.298569650
313     12   9.643529914    9.643529914
314     12   9.643529914    9.643529914
315     12   9.643529914    9.643529914
316     12  10.697735077   10.697735077
317     12  10.697735077   10.697735077
318     12  10.697735077   10.697735077
319     12   5.951768078    5.951768078
320     12   5.951768078    5.951768078
321     12   5.951768078    5.951768078
322     12  10.189950685   10.189950686
323     12  10.189950685   10.189950686
324     12  10.189950685   10.189950686
325     12   6.388445585    6.388445585
326     12   6.388445585    6.388445585
327     12   6.388445585    6.388445585
328     12   9.861056861    9.861056861
329     12   9.861056861    9.861056861
330     12   9.861056861    9.861056861
331     12   9.479675711    9.479675712
332     12   9.479675711    9.479675712
333     12   9.479675711    9.479675712
334     12  10.654979638   10.654979638
335     12  10.654979638   10.654979638
336     12  10.654979638   10.654979638
145      8  10.788697601   10.788697601
146      8  10.788697601   10.788697601
147      8  10.788697601   10.788697601
148      8   8.728189215    8.728189214
149      8   8.728189215    8.728189214
150      8   8.728189215    8.728189214
151      8  10.348507080   10.348507079
152      8  10.348507080   10.348507079
153      8  10.348507080   10.348507079
154      8  10.491889152   10.491889151
155      8  10.491889152   10.491889151
156      8  10.491889152   10.491889151
157      8   9.764878646    9.764878646
158      8   9.764878646    9.764878646
159      8   9.764878646    9.764878646
160      8  10.159568880   10.159568880
161      8  10.159568880   10.159568880
162      8  10.159568880   10.159568880
163      8   8.831372620    8.831372619
164      8   8.831372620    8.831372619
165      8   8.831372620    8.831372619
166      8   9.298569650    9.298569649
167      8   9.298569650    9.298569649
168      8   9.298569650    9.298569649
169      8   9.643529914    9.643529914
170      8   9.643529914    9.643529914
171      8   9.643529914    9.643529914
172      8  10.697735077   10.697735076
173      8  10.697735077   10.697735076
174      8  10.697735077   10.697735076
175      8   5.951768078    5.951768078
176      8   5.951768078    5.951768078
177      8   5.951768078    5.951768078
178      8  10.189950685   10.189950685
179      8  10.189950685   10.189950685
180      8  10.189950685   10.189950685
181      8   6.388445585    6.388445584
182      8   6.388445585    6.388445584
183      8   6.388445585    6.388445584
184      8   9.861056861    9.861056860
185      8   9.861056861    9.861056860
186      8   9.861056861    9.861056860
187      8   9.479675711    9.479675711
188      8   9.479675711    9.479675711
189      8   9.479675711    9.479675711
190      8  10.654979638   10.654979637
191      8  10.654979638   10.654979637
192      8  10.654979638   10.654979637
433    102  10.788697601             NA
434    102  10.788697601             NA
435    102  10.788697601             NA
436    102   8.728189215             NA
437    102   8.728189215             NA
438    102   8.728189215             NA
439    102  10.348507080             NA
440    102  10.348507080             NA
441    102  10.348507080             NA
442    102  10.491889152             NA
443    102  10.491889152             NA
444    102  10.491889152             NA
445    102   9.764878646             NA
446    102   9.764878646             NA
447    102   9.764878646             NA
448    102  10.159568880             NA
449    102  10.159568880             NA
450    102  10.159568880             NA
451    102   8.831372620             NA
452    102   8.831372620             NA
453    102   8.831372620             NA
454    102   9.298569650             NA
455    102   9.298569650             NA
456    102   9.298569650             NA
457    102   9.643529914             NA
458    102   9.643529914             NA
459    102   9.643529914             NA
460    102  10.697735077             NA
461    102  10.697735077             NA
462    102  10.697735077             NA
463    102   5.951768078             NA
464    102   5.951768078             NA
465    102   5.951768078             NA
466    102  10.189950685             NA
467    102  10.189950685             NA
468    102  10.189950685             NA
469    102   6.388445585             NA
470    102   6.388445585             NA
471    102   6.388445585             NA
472    102   9.861056861             NA
473    102   9.861056861             NA
474    102   9.861056861             NA
475    102   9.479675711             NA
476    102   9.479675711             NA
477    102   9.479675711             NA
478    102  10.654979638             NA
479    102  10.654979638             NA
480    102  10.654979638             NA
385    101  10.788697601             NA
386    101  10.788697601             NA
387    101  10.788697601             NA
388    101   8.728189215             NA
389    101   8.728189215             NA
390    101   8.728189215             NA
391    101  10.348507080             NA
392    101  10.348507080             NA
393    101  10.348507080             NA
394    101  10.491889152             NA
395    101  10.491889152             NA
396    101  10.491889152             NA
397    101   9.764878646             NA
398    101   9.764878646             NA
399    101   9.764878646             NA
400    101  10.159568880             NA
401    101  10.159568880             NA
402    101  10.159568880             NA
403    101   8.831372620             NA
404    101   8.831372620             NA
405    101   8.831372620             NA
406    101   9.298569650             NA
407    101   9.298569650             NA
408    101   9.298569650             NA
409    101   9.643529914             NA
410    101   9.643529914             NA
411    101   9.643529914             NA
412    101  10.697735077             NA
413    101  10.697735077             NA
414    101  10.697735077             NA
415    101   5.951768078             NA
416    101   5.951768078             NA
417    101   5.951768078             NA
418    101  10.189950685             NA
419    101  10.189950685             NA
420    101  10.189950685             NA
421    101   6.388445585             NA
422    101   6.388445585             NA
423    101   6.388445585             NA
424    101   9.861056861             NA
425    101   9.861056861             NA
426    101   9.861056861             NA
427    101   9.479675711             NA
428    101   9.479675711             NA
429    101   9.479675711             NA
430    101  10.654979638             NA
431    101  10.654979638             NA
432    101  10.654979638             NA
193      9  10.788697601   10.788697601
194      9  10.788697601   10.788697601
195      9  10.788697601   10.788697601
196      9   8.728189215    8.728189215
197      9   8.728189215    8.728189215
198      9   8.728189215    8.728189215
199      9  10.348507080   10.348507080
200      9  10.348507080   10.348507080
201      9  10.348507080   10.348507080
202      9  10.491889152   10.491889151
203      9  10.491889152   10.491889151
204      9  10.491889152   10.491889151
205      9   9.764878646    9.764878646
206      9   9.764878646    9.764878646
207      9   9.764878646    9.764878646
208      9  10.159568880   10.159568880
209      9  10.159568880   10.159568880
210      9  10.159568880   10.159568880
211      9   8.831372620    8.831372619
212      9   8.831372620    8.831372619
213      9   8.831372620    8.831372619
214      9   9.298569650    9.298569649
215      9   9.298569650    9.298569649
216      9   9.298569650    9.298569649
217      9   9.643529914    9.643529914
218      9   9.643529914    9.643529914
219      9   9.643529914    9.643529914
220      9  10.697735077   10.697735076
221      9  10.697735077   10.697735076
222      9  10.697735077   10.697735076
223      9   5.951768078    5.951768078
224      9   5.951768078    5.951768078
225      9   5.951768078    5.951768078
226      9  10.189950685   10.189950685
227      9  10.189950685   10.189950685
228      9  10.189950685   10.189950685
229      9   6.388445585    6.388445585
230      9   6.388445585    6.388445585
231      9   6.388445585    6.388445585
232      9   9.861056861    9.861056860
233      9   9.861056861    9.861056860
234      9   9.861056861    9.861056860
235      9   9.479675711    9.479675711
236      9   9.479675711    9.479675711
237      9   9.479675711    9.479675711
238      9  10.654979638   10.654979638
239      9  10.654979638   10.654979638
240      9  10.654979638   10.654979638
> (n2prD01 <- predict(fit2, newD, level=0:1))#  "
    TreeID predict.fixed predict.TreeID
97       5  10.691223167   10.691223167
98       5  10.296461851   10.296461852
99       5  11.075393507   11.075393507
100      5   8.585737599    8.585737599
101      5   8.270794575    8.270794576
102      5   9.031667476    9.031667477
103      5  10.238808347   10.238808347
104      5   9.861283700    9.861283701
105      5  10.641512300   10.641512300
106      5  10.386015146   10.386015147
107      5  10.002887181   10.002887181
108      5  10.783000687   10.783000688
109      5   9.641171764    9.641171765
110      5   9.286344670    9.286344670
111      5  10.063976118   10.063976118
112      5  10.045061407   10.045061407
113      5   9.674904020    9.674904021
114      5  10.454830703   10.454830703
115      5   8.690436651    8.690436652
116      5   8.371548547    8.371548548
117      5   9.134786355    9.134786356
118      5   9.165463083    9.165463083
119      5   8.828644299    8.828644300
120      5   9.600661596    9.600661596
121      5   9.517224050    9.517224050
122      5   9.167094090    9.167094091
123      5   9.943567234    9.943567235
124      5  10.597617246   10.597617246
125      5  10.206426097   10.206426098
126      5  10.985855167   10.985855167
127      5   5.797197274    5.797197274
128      5   5.586401044    5.586401044
129      5   6.225686445    6.225686445
130      5  10.076198752   10.076198753
131      5   9.704857943    9.704857944
132      5  10.484867978   10.484867979
133      5   6.232149559    6.232149560
134      5   6.005226193    6.005226193
135      5   6.671050818    6.671050818
136      5   9.739486433    9.739486434
137      5   9.380931090    9.380931090
138      5  10.159329344   10.159329344
139      5   9.350031285    9.350031286
140      5   9.006231696    9.006231697
141      5   9.780802934    9.780802935
142      5  10.553640461   10.553640461
143      5  10.164125910   10.164125911
144      5  10.943747498   10.943747499
241     11  10.691223167   10.691223167
242     11  10.296461851   10.296461851
243     11  11.075393507   11.075393507
244     11   8.585737599    8.585737599
245     11   8.270794575    8.270794575
246     11   9.031667476    9.031667476
247     11  10.238808347   10.238808347
248     11   9.861283700    9.861283700
249     11  10.641512300   10.641512299
250     11  10.386015146   10.386015146
251     11  10.002887181   10.002887181
252     11  10.783000687   10.783000687
253     11   9.641171764    9.641171764
254     11   9.286344670    9.286344670
255     11  10.063976118   10.063976118
256     11  10.045061407   10.045061407
257     11   9.674904020    9.674904020
258     11  10.454830703   10.454830703
259     11   8.690436651    8.690436651
260     11   8.371548547    8.371548547
261     11   9.134786355    9.134786355
262     11   9.165463083    9.165463083
263     11   8.828644299    8.828644299
264     11   9.600661596    9.600661596
265     11   9.517224050    9.517224050
266     11   9.167094090    9.167094090
267     11   9.943567234    9.943567234
268     11  10.597617246   10.597617246
269     11  10.206426097   10.206426097
270     11  10.985855167   10.985855167
271     11   5.797197274    5.797197274
272     11   5.586401044    5.586401044
273     11   6.225686445    6.225686445
274     11  10.076198752   10.076198752
275     11   9.704857943    9.704857943
276     11  10.484867978   10.484867978
277     11   6.232149559    6.232149559
278     11   6.005226193    6.005226193
279     11   6.671050818    6.671050818
280     11   9.739486433    9.739486433
281     11   9.380931090    9.380931090
282     11  10.159329344   10.159329344
283     11   9.350031285    9.350031285
284     11   9.006231696    9.006231696
285     11   9.780802934    9.780802934
286     11  10.553640461   10.553640461
287     11  10.164125910   10.164125910
288     11  10.943747498   10.943747498
337    100  10.691223167             NA
338    100  10.296461851             NA
339    100  11.075393507             NA
340    100   8.585737599             NA
341    100   8.270794575             NA
342    100   9.031667476             NA
343    100  10.238808347             NA
344    100   9.861283700             NA
345    100  10.641512300             NA
346    100  10.386015146             NA
347    100  10.002887181             NA
348    100  10.783000687             NA
349    100   9.641171764             NA
350    100   9.286344670             NA
351    100  10.063976118             NA
352    100  10.045061407             NA
353    100   9.674904020             NA
354    100  10.454830703             NA
355    100   8.690436651             NA
356    100   8.371548547             NA
357    100   9.134786355             NA
358    100   9.165463083             NA
359    100   8.828644299             NA
360    100   9.600661596             NA
361    100   9.517224050             NA
362    100   9.167094090             NA
363    100   9.943567234             NA
364    100  10.597617246             NA
365    100  10.206426097             NA
366    100  10.985855167             NA
367    100   5.797197274             NA
368    100   5.586401044             NA
369    100   6.225686445             NA
370    100  10.076198752             NA
371    100   9.704857943             NA
372    100  10.484867978             NA
373    100   6.232149559             NA
374    100   6.005226193             NA
375    100   6.671050818             NA
376    100   9.739486433             NA
377    100   9.380931090             NA
378    100  10.159329344             NA
379    100   9.350031285             NA
380    100   9.006231696             NA
381    100   9.780802934             NA
382    100  10.553640461             NA
383    100  10.164125910             NA
384    100  10.943747498             NA
49       4  10.691223167   10.691223167
50       4  10.296461851   10.296461851
51       4  11.075393507   11.075393507
52       4   8.585737599    8.585737599
53       4   8.270794575    8.270794576
54       4   9.031667476    9.031667476
55       4  10.238808347   10.238808347
56       4   9.861283700    9.861283700
57       4  10.641512300   10.641512300
58       4  10.386015146   10.386015147
59       4  10.002887181   10.002887181
60       4  10.783000687   10.783000688
61       4   9.641171764    9.641171765
62       4   9.286344670    9.286344670
63       4  10.063976118   10.063976118
64       4  10.045061407   10.045061407
65       4   9.674904020    9.674904021
66       4  10.454830703   10.454830703
67       4   8.690436651    8.690436652
68       4   8.371548547    8.371548548
69       4   9.134786355    9.134786356
70       4   9.165463083    9.165463083
71       4   8.828644299    8.828644300
72       4   9.600661596    9.600661596
73       4   9.517224050    9.517224050
74       4   9.167094090    9.167094090
75       4   9.943567234    9.943567234
76       4  10.597617246   10.597617246
77       4  10.206426097   10.206426097
78       4  10.985855167   10.985855167
79       4   5.797197274    5.797197274
80       4   5.586401044    5.586401044
81       4   6.225686445    6.225686445
82       4  10.076198752   10.076198752
83       4   9.704857943    9.704857944
84       4  10.484867978   10.484867979
85       4   6.232149559    6.232149560
86       4   6.005226193    6.005226193
87       4   6.671050818    6.671050818
88       4   9.739486433    9.739486434
89       4   9.380931090    9.380931090
90       4  10.159329344   10.159329344
91       4   9.350031285    9.350031285
92       4   9.006231696    9.006231697
93       4   9.780802934    9.780802935
94       4  10.553640461   10.553640461
95       4  10.164125910   10.164125911
96       4  10.943747498   10.943747499
1        2  10.691223167   10.691223168
2        2  10.296461851   10.296461852
3        2  11.075393507   11.075393508
4        2   8.585737599    8.585737600
5        2   8.270794575    8.270794576
6        2   9.031667476    9.031667477
7        2  10.238808347   10.238808348
8        2   9.861283700    9.861283701
9        2  10.641512300   10.641512301
10       2  10.386015146   10.386015147
11       2  10.002887181   10.002887182
12       2  10.783000687   10.783000689
13       2   9.641171764    9.641171765
14       2   9.286344670    9.286344671
15       2  10.063976118   10.063976119
16       2  10.045061407   10.045061408
17       2   9.674904020    9.674904021
18       2  10.454830703   10.454830704
19       2   8.690436651    8.690436652
20       2   8.371548547    8.371548548
21       2   9.134786355    9.134786356
22       2   9.165463083    9.165463084
23       2   8.828644299    8.828644300
24       2   9.600661596    9.600661597
25       2   9.517224050    9.517224051
26       2   9.167094090    9.167094091
27       2   9.943567234    9.943567235
28       2  10.597617246   10.597617247
29       2  10.206426097   10.206426098
30       2  10.985855167   10.985855168
31       2   5.797197274    5.797197274
32       2   5.586401044    5.586401044
33       2   6.225686445    6.225686446
34       2  10.076198752   10.076198753
35       2   9.704857943    9.704857944
36       2  10.484867978   10.484867980
37       2   6.232149559    6.232149560
38       2   6.005226193    6.005226194
39       2   6.671050818    6.671050819
40       2   9.739486433    9.739486434
41       2   9.380931090    9.380931091
42       2  10.159329344   10.159329345
43       2   9.350031285    9.350031286
44       2   9.006231696    9.006231697
45       2   9.780802934    9.780802935
46       2  10.553640461   10.553640462
47       2  10.164125910   10.164125912
48       2  10.943747498   10.943747499
289     12  10.691223167   10.691223167
290     12  10.296461851   10.296461851
291     12  11.075393507   11.075393507
292     12   8.585737599    8.585737599
293     12   8.270794575    8.270794576
294     12   9.031667476    9.031667476
295     12  10.238808347   10.238808347
296     12   9.861283700    9.861283700
297     12  10.641512300   10.641512300
298     12  10.386015146   10.386015147
299     12  10.002887181   10.002887181
300     12  10.783000687   10.783000688
301     12   9.641171764    9.641171765
302     12   9.286344670    9.286344670
303     12  10.063976118   10.063976118
304     12  10.045061407   10.045061407
305     12   9.674904020    9.674904021
306     12  10.454830703   10.454830703
307     12   8.690436651    8.690436652
308     12   8.371548547    8.371548548
309     12   9.134786355    9.134786356
310     12   9.165463083    9.165463083
311     12   8.828644299    8.828644300
312     12   9.600661596    9.600661596
313     12   9.517224050    9.517224050
314     12   9.167094090    9.167094090
315     12   9.943567234    9.943567234
316     12  10.597617246   10.597617246
317     12  10.206426097   10.206426097
318     12  10.985855167   10.985855167
319     12   5.797197274    5.797197274
320     12   5.586401044    5.586401044
321     12   6.225686445    6.225686445
322     12  10.076198752   10.076198752
323     12   9.704857943    9.704857943
324     12  10.484867978   10.484867979
325     12   6.232149559    6.232149560
326     12   6.005226193    6.005226193
327     12   6.671050818    6.671050818
328     12   9.739486433    9.739486434
329     12   9.380931090    9.380931090
330     12  10.159329344   10.159329344
331     12   9.350031285    9.350031285
332     12   9.006231696    9.006231697
333     12   9.780802934    9.780802935
334     12  10.553640461   10.553640461
335     12  10.164125910   10.164125911
336     12  10.943747498   10.943747499
145      8  10.691223167   10.691223166
146      8  10.296461851   10.296461850
147      8  11.075393507   11.075393506
148      8   8.585737599    8.585737598
149      8   8.270794575    8.270794574
150      8   9.031667476    9.031667475
151      8  10.238808347   10.238808346
152      8   9.861283700    9.861283699
153      8  10.641512300   10.641512298
154      8  10.386015146   10.386015145
155      8  10.002887181   10.002887180
156      8  10.783000687   10.783000686
157      8   9.641171764    9.641171763
158      8   9.286344670    9.286344669
159      8  10.063976118   10.063976117
160      8  10.045061407   10.045061406
161      8   9.674904020    9.674904019
162      8  10.454830703   10.454830702
163      8   8.690436651    8.690436650
164      8   8.371548547    8.371548547
165      8   9.134786355    9.134786354
166      8   9.165463083    9.165463082
167      8   8.828644299    8.828644298
168      8   9.600661596    9.600661595
169      8   9.517224050    9.517224049
170      8   9.167094090    9.167094089
171      8   9.943567234    9.943567233
172      8  10.597617246   10.597617245
173      8  10.206426097   10.206426096
174      8  10.985855167   10.985855165
175      8   5.797197274    5.797197273
176      8   5.586401044    5.586401043
177      8   6.225686445    6.225686444
178      8  10.076198752   10.076198751
179      8   9.704857943    9.704857942
180      8  10.484867978   10.484867977
181      8   6.232149559    6.232149559
182      8   6.005226193    6.005226192
183      8   6.671050818    6.671050817
184      8   9.739486433    9.739486432
185      8   9.380931090    9.380931089
186      8  10.159329344   10.159329343
187      8   9.350031285    9.350031284
188      8   9.006231696    9.006231695
189      8   9.780802934    9.780802933
190      8  10.553640461   10.553640460
191      8  10.164125910   10.164125909
192      8  10.943747498   10.943747497
433    102  10.691223167             NA
434    102  10.296461851             NA
435    102  11.075393507             NA
436    102   8.585737599             NA
437    102   8.270794575             NA
438    102   9.031667476             NA
439    102  10.238808347             NA
440    102   9.861283700             NA
441    102  10.641512300             NA
442    102  10.386015146             NA
443    102  10.002887181             NA
444    102  10.783000687             NA
445    102   9.641171764             NA
446    102   9.286344670             NA
447    102  10.063976118             NA
448    102  10.045061407             NA
449    102   9.674904020             NA
450    102  10.454830703             NA
451    102   8.690436651             NA
452    102   8.371548547             NA
453    102   9.134786355             NA
454    102   9.165463083             NA
455    102   8.828644299             NA
456    102   9.600661596             NA
457    102   9.517224050             NA
458    102   9.167094090             NA
459    102   9.943567234             NA
460    102  10.597617246             NA
461    102  10.206426097             NA
462    102  10.985855167             NA
463    102   5.797197274             NA
464    102   5.586401044             NA
465    102   6.225686445             NA
466    102  10.076198752             NA
467    102   9.704857943             NA
468    102  10.484867978             NA
469    102   6.232149559             NA
470    102   6.005226193             NA
471    102   6.671050818             NA
472    102   9.739486433             NA
473    102   9.380931090             NA
474    102  10.159329344             NA
475    102   9.350031285             NA
476    102   9.006231696             NA
477    102   9.780802934             NA
478    102  10.553640461             NA
479    102  10.164125910             NA
480    102  10.943747498             NA
385    101  10.691223167             NA
386    101  10.296461851             NA
387    101  11.075393507             NA
388    101   8.585737599             NA
389    101   8.270794575             NA
390    101   9.031667476             NA
391    101  10.238808347             NA
392    101   9.861283700             NA
393    101  10.641512300             NA
394    101  10.386015146             NA
395    101  10.002887181             NA
396    101  10.783000687             NA
397    101   9.641171764             NA
398    101   9.286344670             NA
399    101  10.063976118             NA
400    101  10.045061407             NA
401    101   9.674904020             NA
402    101  10.454830703             NA
403    101   8.690436651             NA
404    101   8.371548547             NA
405    101   9.134786355             NA
406    101   9.165463083             NA
407    101   8.828644299             NA
408    101   9.600661596             NA
409    101   9.517224050             NA
410    101   9.167094090             NA
411    101   9.943567234             NA
412    101  10.597617246             NA
413    101  10.206426097             NA
414    101  10.985855167             NA
415    101   5.797197274             NA
416    101   5.586401044             NA
417    101   6.225686445             NA
418    101  10.076198752             NA
419    101   9.704857943             NA
420    101  10.484867978             NA
421    101   6.232149559             NA
422    101   6.005226193             NA
423    101   6.671050818             NA
424    101   9.739486433             NA
425    101   9.380931090             NA
426    101  10.159329344             NA
427    101   9.350031285             NA
428    101   9.006231696             NA
429    101   9.780802934             NA
430    101  10.553640461             NA
431    101  10.164125910             NA
432    101  10.943747498             NA
193      9  10.691223167   10.691223166
194      9  10.296461851   10.296461851
195      9  11.075393507   11.075393506
196      9   8.585737599    8.585737599
197      9   8.270794575    8.270794575
198      9   9.031667476    9.031667476
199      9  10.238808347   10.238808346
200      9   9.861283700    9.861283699
201      9  10.641512300   10.641512299
202      9  10.386015146   10.386015146
203      9  10.002887181   10.002887180
204      9  10.783000687   10.783000687
205      9   9.641171764    9.641171764
206      9   9.286344670    9.286344669
207      9  10.063976118   10.063976117
208      9  10.045061407   10.045061406
209      9   9.674904020    9.674904020
210      9  10.454830703   10.454830702
211      9   8.690436651    8.690436651
212      9   8.371548547    8.371548547
213      9   9.134786355    9.134786355
214      9   9.165463083    9.165463082
215      9   8.828644299    8.828644299
216      9   9.600661596    9.600661595
217      9   9.517224050    9.517224049
218      9   9.167094090    9.167094090
219      9   9.943567234    9.943567233
220      9  10.597617246   10.597617245
221      9  10.206426097   10.206426096
222      9  10.985855167   10.985855166
223      9   5.797197274    5.797197273
224      9   5.586401044    5.586401043
225      9   6.225686445    6.225686445
226      9  10.076198752   10.076198752
227      9   9.704857943    9.704857943
228      9  10.484867978   10.484867978
229      9   6.232149559    6.232149559
230      9   6.005226193    6.005226193
231      9   6.671050818    6.671050818
232      9   9.739486433    9.739486433
233      9   9.380931090    9.380931089
234      9  10.159329344   10.159329343
235      9   9.350031285    9.350031285
236      9   9.006231696    9.006231696
237      9   9.780802934    9.780802934
238      9  10.553640461   10.553640460
239      9  10.164125910   10.164125910
240      9  10.943747498   10.943747498
> ## consistency :
> stopifnot(
+     identical(is.na(n1prD1), is.na(n2prD1)),
+     identical(sort(unique(newD[is.na(n2prD1), "TreeID"])), 100:102),
+     sort(unique( newD[is.na(n2prD1), "TreeID"] )) %in% 100:102 ,
+     all.equal(as.vector(n1prD0), n1prD01[,"predict.fixed"], tolerance= 1e-15),
+     all.equal(as.vector(n2prD0), n2prD01[,"predict.fixed"], tolerance= 1e-15),
+     all.equal(as.vector(n1prD1), n1prD01[,"predict.TreeID"],tolerance= 1e-15),
+     all.equal(as.vector(n2prD1), n2prD01[,"predict.TreeID"],tolerance= 1e-15))
> 
> ## new data with factor levels stored as character
> stopifnot(all.equal(predict(fit2, data.frame(SP="A", age=2), level = 0),
+                     predict(fit2, level = 0)[1], check.attributes = FALSE))
> ## in nlme <= 3.1-155, failed with
> ## Error in `contrasts<-`(`*tmp*`, value = contr.funs[1 + isOF[nn]]) : 
> ##   contrasts can be applied only to factors with 2 or more levels
> 
> ## model without intercept
> fit3 <- update(fit2, fixed = a + b ~ SP - 1)
> stopifnot(all.equal(predict(fit3, head(df, 3)),
+                     head(predict(fit3), 3), check.attributes = FALSE))
> ## in nlme <= 3.1-155, prediction failed if not all levels occurred
> ## Error in f %*% beta[fmap[[nm]]] : non-conformable arguments
> 
