
R version 4.3.3 (2024-02-29) -- "Angel Food Cake"
Copyright (C) 2024 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> ## [Bug 18476] alpha handling in palette functions  (23 Feb 2023)
> ##             https://bugs.r-project.org/show_bug.cgi?id=18476
> ## Attachment 3131 https://bugs.r-project.org/attachment.cgi?id=3131
> ## and comment #3  by Achim Zeileis
> 
> 
> ## from attachment #3131 :
> check_alpha <- function(colors = "topo.colors", ncolor = 3, nalpha = 3, ...) {
+   ## alpha sequence of length nalpha
+   alpha <- seq(0, 1, length.out = nalpha)
+ 
+   ## generate colors with alpha=...
+   col1 <- tryCatch(do.call(colors, c(list(n = ncolor, alpha = alpha), list(...))),
+                    error = identity)
+   if(inherits(col1, "error")) return(FALSE)
+ 
+   ## generate colors without alpha= and add manually afterwards
+   alpha <- format(as.hexmode(round(alpha * 255 + 0.0001)), width = 2L, upper.case = TRUE)
+   col2 <- paste0(do.call(colors, c(list(n = ncolor), list(...))),
+                  rep_len(alpha, ncolor))
+ 
+   ## check whether both strategies yield identical output
+   identical(col1, col2)
+ }
> 
> expndGrid <- function(...)
+           expand.grid(..., KEEP.OUT.ATTRS = FALSE, stringsAsFactors = FALSE)
> 
> iSamp <- function(n, f=1/4, nS = max(min(n, 24L), f*n), full = interactive())
+     if(full) seq_len(n) else sample.int(n, nS)
> 
> chkALLalpha <- function(d)
+     vapply(iSamp(nrow(d)), function(i) do.call(check_alpha, d[i,]), NA)
> 
> ## Check old palettes ------------------
> d1 <- expndGrid(colors = c("rainbow", "topo.colors", "terrain.colors",
+                            "heat.colors", "cm.colors", "gray.colors"),
+   ncolor = c(1, 3, 9, 100),
+   nalpha = c(2, 3, 9, 100))
> table(L <- chkALLalpha(d1)) ## R-4.2.x: 71 FALSE, 25 TRUE -- now 96 TRUE

TRUE 
  24 
> if(!all(L)) stop("---> not all ok")
> 
> 
> ## Check the new palettes -----------------
> 
> d2 <- expndGrid(colors = "palette.colors",
+   ncolor = c(1, 3, 7),
+   nalpha = c(2, 3, 7),
+   palette = print(palette.pals()))
 [1] "R3"              "R4"              "ggplot2"         "Okabe-Ito"      
 [5] "Accent"          "Dark 2"          "Paired"          "Pastel 1"       
 [9] "Pastel 2"        "Set 1"           "Set 2"           "Set 3"          
[13] "Tableau 10"      "Classic Tableau" "Polychrome 36"   "Alphabet"       
> table(L <- chkALLalpha(d2)) ## R-4.2.x: 64 FALSE, 80 TRUE -- now 144 TRUE

TRUE 
  36 
> if(!all(L)) stop("---> not all ok")
> 
> d3 <- expndGrid(colors = "hcl.colors",
+   ncolor = c(1, 3, 9, 100),
+   nalpha = c(2, 3, 9, 100),
+   palette = print(hcl.pals()))
  [1] "Pastel 1"      "Dark 2"        "Dark 3"        "Set 2"        
  [5] "Set 3"         "Warm"          "Cold"          "Harmonic"     
  [9] "Dynamic"       "Grays"         "Light Grays"   "Blues 2"      
 [13] "Blues 3"       "Purples 2"     "Purples 3"     "Reds 2"       
 [17] "Reds 3"        "Greens 2"      "Greens 3"      "Oslo"         
 [21] "Purple-Blue"   "Red-Purple"    "Red-Blue"      "Purple-Orange"
 [25] "Purple-Yellow" "Blue-Yellow"   "Green-Yellow"  "Red-Yellow"   
 [29] "Heat"          "Heat 2"        "Terrain"       "Terrain 2"    
 [33] "Viridis"       "Plasma"        "Inferno"       "Rocket"       
 [37] "Mako"          "Dark Mint"     "Mint"          "BluGrn"       
 [41] "Teal"          "TealGrn"       "Emrld"         "BluYl"        
 [45] "ag_GrnYl"      "Peach"         "PinkYl"        "Burg"         
 [49] "BurgYl"        "RedOr"         "OrYel"         "Purp"         
 [53] "PurpOr"        "Sunset"        "Magenta"       "SunsetDark"   
 [57] "ag_Sunset"     "BrwnYl"        "YlOrRd"        "YlOrBr"       
 [61] "OrRd"          "Oranges"       "YlGn"          "YlGnBu"       
 [65] "Reds"          "RdPu"          "PuRd"          "Purples"      
 [69] "PuBuGn"        "PuBu"          "Greens"        "BuGn"         
 [73] "GnBu"          "BuPu"          "Blues"         "Lajolla"      
 [77] "Turku"         "Hawaii"        "Batlow"        "Blue-Red"     
 [81] "Blue-Red 2"    "Blue-Red 3"    "Red-Green"     "Purple-Green" 
 [85] "Purple-Brown"  "Green-Brown"   "Blue-Yellow 2" "Blue-Yellow 3"
 [89] "Green-Orange"  "Cyan-Magenta"  "Tropic"        "Broc"         
 [93] "Cork"          "Vik"           "Berlin"        "Lisbon"       
 [97] "Tofino"        "ArmyRose"      "Earth"         "Fall"         
[101] "Geyser"        "TealRose"      "Temps"         "PuOr"         
[105] "RdBu"          "RdGy"          "PiYG"          "PRGn"         
[109] "BrBG"          "RdYlBu"        "RdYlGn"        "Spectral"     
[113] "Zissou 1"      "Cividis"       "Roma"         
> table(L <- chkALLalpha(d3)) ## R-4.2.x: 1057 FALSE, 783 TRUE -- now 1840 TRUE

TRUE 
 460 
> if(!all(L)) stop("---> not all ok")
> 
> ## Regr.test for PR#18523:
> stopifnot(identical(c("#002E60", "#3E2000"),
+                     hcl.colors(2, "Vik")))
> 
> div.pals <- hcl.pals(type="diverging")
> divXpals <- hcl.pals(type="divergingx")
> for(p in c(div.pals, divXpals)) {
+   c2 <- hcl.colors(2, p)
+   c3 <- hcl.colors(3, p)
+   stopifnot(length(setdiff(c3,c2)) == 1L)
+   ## cat(p,": "); print(c2)
+ }
> 
